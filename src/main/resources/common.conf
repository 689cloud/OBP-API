akka {

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    kryo  {
      type = "graph"
      idstrategy = "default"
      buffer-size = 65536
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = true
      post-serialization-transformations = "off"
      #post-serialization-transformations = "lz4,aes"
      #encryption {
      #  aes {
      #      mode = "AES/CBC/PKCS5Padding"
      #      key = j68KkRjq21ykRGAQ
      #      IV-length = 16
      #  }
      #}
      implicit-registration-logging = true
      kryo-trace = false
      resolve-subclasses = true
    }

    serializers {
      #java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      //"net.liftweb.common.Full" = kryo,
      "net.liftweb.common.Empty" = kryo,
      "net.liftweb.common.Box" = kryo,
      "net.liftweb.common.ParamFailure" = kryo,
      "code.api.APIFailure" = kryo,
      "code.views.RemoteViewCaseClasses" = kryo,
      "code.model.BankAccount" = kryo,
      "code.model.View" = kryo,
      "code.model.User" = kryo,
      "code.model.ViewId" = kryo,
      "code.model.ViewUID" = kryo,
      //"code.model.Permission" = kryo,
      "scala.Unit" = kryo,
      "scala.Boolean" = kryo,
      "java.io.Serializable" = kryo,
      "scala.collection.immutable.List" = kryo,
      "akka.actor.ActorSelectionMessage" = kryo
    }

  }

  remote {
    netty {
      hostname = "127.0.0.1"
      tcp {
        send-buffer-size    = 50000000
        receive-buffer-size = 50000000
        maximum-frame-size  = 52428800
      }
    }
  }

}
